import { addons } from 'storybook/internal/preview-api';
import { normalize, sep } from 'upath';
import invariant from 'tiny-invariant';

var ADDON_ID="storybookjs/test",ADD_TESTS=`${ADDON_ID}/add_tests`;function defineJestParameter(parameters){let{jest,fileName:filePath}=parameters;if(typeof jest=="string")return [jest];if(jest&&Array.isArray(jest))return jest;if(jest===void 0&&typeof filePath=="string"){let lastPath=filePath.split("/").pop();return invariant(lastPath!=null,"split should always return at least one value"),[lastPath.split(".")[0]]}return null}var findTestResults=(testFiles,jestTestResults,jestTestFilesExt)=>Object.values(testFiles).map(name=>{let fileName=`${sep}${name}${jestTestFilesExt}`;if(jestTestResults&&jestTestResults.testResults){let fileNamePattern=new RegExp(fileName);return {fileName,name,result:jestTestResults.testResults.find(test=>!!normalize(test.name).match(fileNamePattern))}}return {fileName,name}}),emitAddTests=({kind,story,testFiles,options})=>{addons.getChannel().emit(ADD_TESTS,{kind,storyName:story,tests:findTestResults(testFiles,options.results,options.filesExt)});},withTests=userOptions=>{let options={...{filesExt:"((\\.specs?)|(\\.tests?))?(\\.[jt]sx?)?$"},...userOptions};return (...args)=>{let[storyFn,{kind,parameters={}}]=args,testFiles=defineJestParameter(parameters);return testFiles!==null&&emitAddTests({kind,story:storyFn,testFiles,options}),storyFn()}};

export { withTests };
