"use strict";
self["webpackHotUpdatestorybook"]("SearchProduct-stories",{

/***/ "./stories/SearchProduct.stories.js":
/*!******************************************!*\
  !*** ./stories/SearchProduct.stories.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Default: () => (/* binding */ Default),
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _SearchProduct__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SearchProduct */ "./stories/SearchProduct.js");
/* harmony import */ var _storybook_testing_library__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @storybook/testing-library */ "./node_modules/@storybook/testing-library/dist/index.mjs");


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  title: "Component/SearchProduct",
  tags: ["autodocs"],
  parameters: {
    layout: "centered"
  },
  argTypes: {
    placeholder: {
      control: "text"
    },
    fontSize: {
      control: "text"
    },
    searchProductBackgroundColor: {
      control: "color"
    }
  }
});
const Default = {
  args: {
    placeholder: "Search here ...",
    fontSize: "12px",
    searchProductBackgroundColor: "#e1c8c8"
  },
  render: args => (0,_SearchProduct__WEBPACK_IMPORTED_MODULE_0__.createSearchProduct)(args),
  // play: async ({ canvasElement }) => {
  //   const canvas = within(canvasElement);

  //   // Test the search functionality
  //   const searchInput = canvas.getByPlaceholderText("Search here ...");
  //   userEvent.type(searchInput, "Tesla");

  //   // Test the filter popup
  //   // Use querySelector to find the Font Awesome icon
  //   const filterIcon = canvasElement.querySelector(".fa-filter");
  //   if (filterIcon) {
  //     userEvent.click(filterIcon);

  //     // Debugging: Log the current HTML to inspect the DOM
  //     console.log(canvasElement.innerHTML);

  //     // Wait for the popup to be visible
  //     const teslaBrand = await canvas.findByText(
  //       "Tesla",
  //       {},
  //       { timeout: 3000 }
  //     );
  //     expect(teslaBrand).toBeInTheDocument();

  //     // Click on the "Tesla" brand to filter
  //     userEvent.click(teslaBrand);

  //     // Wait for the products list to update
  //     await canvas.findByText("Tesla Model S");
  //     expect(canvas.getByText("Tesla Model S")).toBeInTheDocument();
  //     expect(canvas.queryByText("Ford Mustang")).not.toBeInTheDocument();

  //     // Clear filter
  //     userEvent.click(await canvas.findByText("Clear Filter"));

  //     // Wait for all products to be displayed again
  //     await canvas.findByText("Ford Mustang");
  //     expect(canvas.getByText("Ford Mustang")).toBeInTheDocument();
  //   } else {
  //     throw new Error("Filter icon not found");
  //   }
  // },
  play: async ({
    canvasElement
  }) => {
    const canvas = (0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_1__.within)(canvasElement);

    // Test the search functionality
    const searchInput = canvas.getByPlaceholderText("Search here ...");
    _storybook_testing_library__WEBPACK_IMPORTED_MODULE_1__.userEvent.type(searchInput, "Tesla");

    // Wait for the filtered products to appear
    await canvas.findByText("Tesla Model S");
    expect(canvas.getByText("Tesla Model S")).toBeInTheDocument();
    expect(canvas.queryByText("Ford Mustang")).not.toBeInTheDocument();

    // Test the filter popup
    // Click the filter icon to open the popup
    const filterIcon = canvas.getByRole("img", {
      name: /filter/i
    });

    // Ensure filterIcon exists
    expect(filterIcon).toBeInTheDocument();

    // Click the filter icon to toggle the popup
    _storybook_testing_library__WEBPACK_IMPORTED_MODULE_1__.userEvent.click(filterIcon);

    // Wait for the filter popup to be visible and contain "Tesla"
    const teslaItem = await canvas.findByText("Tesla", {}, {
      timeout: 3000
    });
    expect(teslaItem).toBeInTheDocument();

    // Click on the "Tesla" brand to filter
    _storybook_testing_library__WEBPACK_IMPORTED_MODULE_1__.userEvent.click(teslaItem);

    // Wait for the products list to update
    await canvas.findByText("Tesla Model S");
    expect(canvas.getByText("Tesla Model S")).toBeInTheDocument();
    expect(canvas.queryByText("Ford Mustang")).not.toBeInTheDocument();

    // Clear filter
    const clearFilterItem = await canvas.findByText("Clear Filter");
    _storybook_testing_library__WEBPACK_IMPORTED_MODULE_1__.userEvent.click(clearFilterItem);

    // Wait for all products to be displayed again
    await canvas.findByText("Ford Mustang");
    expect(canvas.getByText("Ford Mustang")).toBeInTheDocument();
  }
};
;
const __namedExportsOrder = ["Default"];
Default.parameters = {
  ...Default.parameters,
  docs: {
    ...Default.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    placeholder: \"Search here ...\",\n    fontSize: \"12px\",\n    searchProductBackgroundColor: \"#e1c8c8\"\n  },\n  render: args => createSearchProduct(args),\n  // play: async ({ canvasElement }) => {\n  //   const canvas = within(canvasElement);\n\n  //   // Test the search functionality\n  //   const searchInput = canvas.getByPlaceholderText(\"Search here ...\");\n  //   userEvent.type(searchInput, \"Tesla\");\n\n  //   // Test the filter popup\n  //   // Use querySelector to find the Font Awesome icon\n  //   const filterIcon = canvasElement.querySelector(\".fa-filter\");\n  //   if (filterIcon) {\n  //     userEvent.click(filterIcon);\n\n  //     // Debugging: Log the current HTML to inspect the DOM\n  //     console.log(canvasElement.innerHTML);\n\n  //     // Wait for the popup to be visible\n  //     const teslaBrand = await canvas.findByText(\n  //       \"Tesla\",\n  //       {},\n  //       { timeout: 3000 }\n  //     );\n  //     expect(teslaBrand).toBeInTheDocument();\n\n  //     // Click on the \"Tesla\" brand to filter\n  //     userEvent.click(teslaBrand);\n\n  //     // Wait for the products list to update\n  //     await canvas.findByText(\"Tesla Model S\");\n  //     expect(canvas.getByText(\"Tesla Model S\")).toBeInTheDocument();\n  //     expect(canvas.queryByText(\"Ford Mustang\")).not.toBeInTheDocument();\n\n  //     // Clear filter\n  //     userEvent.click(await canvas.findByText(\"Clear Filter\"));\n\n  //     // Wait for all products to be displayed again\n  //     await canvas.findByText(\"Ford Mustang\");\n  //     expect(canvas.getByText(\"Ford Mustang\")).toBeInTheDocument();\n  //   } else {\n  //     throw new Error(\"Filter icon not found\");\n  //   }\n  // },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n\n    // Test the search functionality\n    const searchInput = canvas.getByPlaceholderText(\"Search here ...\");\n    userEvent.type(searchInput, \"Tesla\");\n\n    // Wait for the filtered products to appear\n    await canvas.findByText(\"Tesla Model S\");\n    expect(canvas.getByText(\"Tesla Model S\")).toBeInTheDocument();\n    expect(canvas.queryByText(\"Ford Mustang\")).not.toBeInTheDocument();\n\n    // Test the filter popup\n    // Click the filter icon to open the popup\n    const filterIcon = canvas.getByRole(\"img\", {\n      name: /filter/i\n    });\n\n    // Ensure filterIcon exists\n    expect(filterIcon).toBeInTheDocument();\n\n    // Click the filter icon to toggle the popup\n    userEvent.click(filterIcon);\n\n    // Wait for the filter popup to be visible and contain \"Tesla\"\n    const teslaItem = await canvas.findByText(\"Tesla\", {}, {\n      timeout: 3000\n    });\n    expect(teslaItem).toBeInTheDocument();\n\n    // Click on the \"Tesla\" brand to filter\n    userEvent.click(teslaItem);\n\n    // Wait for the products list to update\n    await canvas.findByText(\"Tesla Model S\");\n    expect(canvas.getByText(\"Tesla Model S\")).toBeInTheDocument();\n    expect(canvas.queryByText(\"Ford Mustang\")).not.toBeInTheDocument();\n\n    // Clear filter\n    const clearFilterItem = await canvas.findByText(\"Clear Filter\");\n    userEvent.click(clearFilterItem);\n\n    // Wait for all products to be displayed again\n    await canvas.findByText(\"Ford Mustang\");\n    expect(canvas.getByText(\"Ford Mustang\")).toBeInTheDocument();\n  }\n}",
      ...Default.parameters?.docs?.source
    }
  }
};

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./stories/searchProduct.css":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./stories/searchProduct.css ***!
  \*****************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/sourceMaps.js */ "./node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `.search-product {
  width: fit-content;
  height: auto;
  background-color: rgb(156, 105, 105);
  box-shadow: rgba(0, 0, 0, 0.18) 0px 2px 4px;
}
.search {
  display: flex;
  /* justify-content: center; */
  align-items: center;
  width: fit-content;
  height: auto;
  padding: 14px 24px;
  position: relative;
}

.search input {
  border-radius: 5px;
  padding: 10px;
}

.search i {
  color: #fff;
  border-radius: 5px;
  padding: 10px;
  cursor: pointer;
}
.filter-popup {
  width: fit-content;
  /* height: 25vh; */
  background-color: #888686;
  position: absolute;
  top: 56%;
  right: 10%;
  overflow: hidden;
  overflow-y: auto;
  list-style-type: none;
}

.filter-popup li {
  text-decoration: none;
  cursor: pointer;
}

.filter-popup li:hover {
  background-color: #b45555;
}

.filter-popup li span {
  font-size: 12px;
  color: #fff;
}

/* .filter-popup {
  width: fit-content;
  height: 20vh;
  background-color: #888686;
  position: absolute;
  top: 0;
  right: 0;
  overflow: hidden;
  overflow-y: auto;
  list-style-type: none;
} */

.list {
  width: fit-content;
  height: auto;
}

.product-list {
  list-style: none;
  padding: 0;
  margin: 0;
  border-radius: 5px;
}

.product-list li {
  padding: 10px;
  cursor: pointer;
}

.product-list li:hover {
  border-bottom: none;
  background-color: rgb(135, 172, 159);
  border-radius: 5px;
}
`, "",{"version":3,"sources":["webpack://./stories/searchProduct.css"],"names":[],"mappings":"AAAA;EACE,kBAAkB;EAClB,YAAY;EACZ,oCAAoC;EACpC,2CAA2C;AAC7C;AACA;EACE,aAAa;EACb,6BAA6B;EAC7B,mBAAmB;EACnB,kBAAkB;EAClB,YAAY;EACZ,kBAAkB;EAClB,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,aAAa;AACf;;AAEA;EACE,WAAW;EACX,kBAAkB;EAClB,aAAa;EACb,eAAe;AACjB;AACA;EACE,kBAAkB;EAClB,kBAAkB;EAClB,yBAAyB;EACzB,kBAAkB;EAClB,QAAQ;EACR,UAAU;EACV,gBAAgB;EAChB,gBAAgB;EAChB,qBAAqB;AACvB;;AAEA;EACE,qBAAqB;EACrB,eAAe;AACjB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,eAAe;EACf,WAAW;AACb;;AAEA;;;;;;;;;;GAUG;;AAEH;EACE,kBAAkB;EAClB,YAAY;AACd;;AAEA;EACE,gBAAgB;EAChB,UAAU;EACV,SAAS;EACT,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,eAAe;AACjB;;AAEA;EACE,mBAAmB;EACnB,oCAAoC;EACpC,kBAAkB;AACpB","sourcesContent":[".search-product {\n  width: fit-content;\n  height: auto;\n  background-color: rgb(156, 105, 105);\n  box-shadow: rgba(0, 0, 0, 0.18) 0px 2px 4px;\n}\n.search {\n  display: flex;\n  /* justify-content: center; */\n  align-items: center;\n  width: fit-content;\n  height: auto;\n  padding: 14px 24px;\n  position: relative;\n}\n\n.search input {\n  border-radius: 5px;\n  padding: 10px;\n}\n\n.search i {\n  color: #fff;\n  border-radius: 5px;\n  padding: 10px;\n  cursor: pointer;\n}\n.filter-popup {\n  width: fit-content;\n  /* height: 25vh; */\n  background-color: #888686;\n  position: absolute;\n  top: 56%;\n  right: 10%;\n  overflow: hidden;\n  overflow-y: auto;\n  list-style-type: none;\n}\n\n.filter-popup li {\n  text-decoration: none;\n  cursor: pointer;\n}\n\n.filter-popup li:hover {\n  background-color: #b45555;\n}\n\n.filter-popup li span {\n  font-size: 12px;\n  color: #fff;\n}\n\n/* .filter-popup {\n  width: fit-content;\n  height: 20vh;\n  background-color: #888686;\n  position: absolute;\n  top: 0;\n  right: 0;\n  overflow: hidden;\n  overflow-y: auto;\n  list-style-type: none;\n} */\n\n.list {\n  width: fit-content;\n  height: auto;\n}\n\n.product-list {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  border-radius: 5px;\n}\n\n.product-list li {\n  padding: 10px;\n  cursor: pointer;\n}\n\n.product-list li:hover {\n  border-bottom: none;\n  background-color: rgb(135, 172, 159);\n  border-radius: 5px;\n}\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {



/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
module.exports = function (cssWithMappingToString) {
  var list = [];

  // return the list of modules as css string
  list.toString = function toString() {
    return this.map(function (item) {
      var content = "";
      var needLayer = typeof item[5] !== "undefined";
      if (item[4]) {
        content += "@supports (".concat(item[4], ") {");
      }
      if (item[2]) {
        content += "@media ".concat(item[2], " {");
      }
      if (needLayer) {
        content += "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {");
      }
      content += cssWithMappingToString(item);
      if (needLayer) {
        content += "}";
      }
      if (item[2]) {
        content += "}";
      }
      if (item[4]) {
        content += "}";
      }
      return content;
    }).join("");
  };

  // import a list of modules into the list
  list.i = function i(modules, media, dedupe, supports, layer) {
    if (typeof modules === "string") {
      modules = [[null, modules, undefined]];
    }
    var alreadyImportedModules = {};
    if (dedupe) {
      for (var k = 0; k < this.length; k++) {
        var id = this[k][0];
        if (id != null) {
          alreadyImportedModules[id] = true;
        }
      }
    }
    for (var _k = 0; _k < modules.length; _k++) {
      var item = [].concat(modules[_k]);
      if (dedupe && alreadyImportedModules[item[0]]) {
        continue;
      }
      if (typeof layer !== "undefined") {
        if (typeof item[5] === "undefined") {
          item[5] = layer;
        } else {
          item[1] = "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {").concat(item[1], "}");
          item[5] = layer;
        }
      }
      if (media) {
        if (!item[2]) {
          item[2] = media;
        } else {
          item[1] = "@media ".concat(item[2], " {").concat(item[1], "}");
          item[2] = media;
        }
      }
      if (supports) {
        if (!item[4]) {
          item[4] = "".concat(supports);
        } else {
          item[1] = "@supports (".concat(item[4], ") {").concat(item[1], "}");
          item[4] = supports;
        }
      }
      list.push(item);
    }
  };
  return list;
};

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/sourceMaps.js":
/*!************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/sourceMaps.js ***!
  \************************************************************/
/***/ ((module) => {



module.exports = function (item) {
  var content = item[1];
  var cssMapping = item[3];
  if (!cssMapping) {
    return content;
  }
  if (typeof btoa === "function") {
    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));
    var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);
    var sourceMapping = "/*# ".concat(data, " */");
    return [content].concat([sourceMapping]).join("\n");
  }
  return [content].join("\n");
};

/***/ }),

/***/ "./stories/searchProduct.css":
/*!***********************************!*\
  !*** ./stories/searchProduct.css ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleDomAPI.js */ "./node_modules/style-loader/dist/runtime/styleDomAPI.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertBySelector.js */ "./node_modules/style-loader/dist/runtime/insertBySelector.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertStyleElement.js */ "./node_modules/style-loader/dist/runtime/insertStyleElement.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleTagTransform.js */ "./node_modules/style-loader/dist/runtime/styleTagTransform.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_7_use_1_searchProduct_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./searchProduct.css */ "./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./stories/searchProduct.css");

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());
options.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());

      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");
    
options.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());
options.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());

var update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_7_use_1_searchProduct_css__WEBPACK_IMPORTED_MODULE_6__["default"], options);


if (true) {
  if (!_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_7_use_1_searchProduct_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals || module.hot.invalidate) {
    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {
  if (!a && b || a && !b) {
    return false;
  }
  var p;
  for (p in a) {
    if (isNamedExport && p === "default") {
      // eslint-disable-next-line no-continue
      continue;
    }
    if (a[p] !== b[p]) {
      return false;
    }
  }
  for (p in b) {
    if (isNamedExport && p === "default") {
      // eslint-disable-next-line no-continue
      continue;
    }
    if (!a[p]) {
      return false;
    }
  }
  return true;
};
    var isNamedExport = !_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_7_use_1_searchProduct_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals;
    var oldLocals = isNamedExport ? _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_7_use_1_searchProduct_css__WEBPACK_IMPORTED_MODULE_6__ : _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_7_use_1_searchProduct_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals;

    module.hot.accept(
      /*! !!../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./searchProduct.css */ "./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./stories/searchProduct.css",
      __WEBPACK_OUTDATED_DEPENDENCIES__ => { /* harmony import */ _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_7_use_1_searchProduct_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./searchProduct.css */ "./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./stories/searchProduct.css");
(function () {
        if (!isEqualLocals(oldLocals, isNamedExport ? _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_7_use_1_searchProduct_css__WEBPACK_IMPORTED_MODULE_6__ : _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_7_use_1_searchProduct_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals, isNamedExport)) {
                module.hot.invalidate();

                return;
              }

              oldLocals = isNamedExport ? _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_7_use_1_searchProduct_css__WEBPACK_IMPORTED_MODULE_6__ : _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_7_use_1_searchProduct_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals;

              update(_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_7_use_1_searchProduct_css__WEBPACK_IMPORTED_MODULE_6__["default"]);
      })(__WEBPACK_OUTDATED_DEPENDENCIES__); }
    )
  }

  module.hot.dispose(function() {
    update();
  });
}



       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_7_use_1_searchProduct_css__WEBPACK_IMPORTED_MODULE_6__["default"] && _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_7_use_1_searchProduct_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals ? _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_7_use_1_searchProduct_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals : undefined);


/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {



var stylesInDOM = [];
function getIndexByIdentifier(identifier) {
  var result = -1;
  for (var i = 0; i < stylesInDOM.length; i++) {
    if (stylesInDOM[i].identifier === identifier) {
      result = i;
      break;
    }
  }
  return result;
}
function modulesToDom(list, options) {
  var idCountMap = {};
  var identifiers = [];
  for (var i = 0; i < list.length; i++) {
    var item = list[i];
    var id = options.base ? item[0] + options.base : item[0];
    var count = idCountMap[id] || 0;
    var identifier = "".concat(id, " ").concat(count);
    idCountMap[id] = count + 1;
    var indexByIdentifier = getIndexByIdentifier(identifier);
    var obj = {
      css: item[1],
      media: item[2],
      sourceMap: item[3],
      supports: item[4],
      layer: item[5]
    };
    if (indexByIdentifier !== -1) {
      stylesInDOM[indexByIdentifier].references++;
      stylesInDOM[indexByIdentifier].updater(obj);
    } else {
      var updater = addElementStyle(obj, options);
      options.byIndex = i;
      stylesInDOM.splice(i, 0, {
        identifier: identifier,
        updater: updater,
        references: 1
      });
    }
    identifiers.push(identifier);
  }
  return identifiers;
}
function addElementStyle(obj, options) {
  var api = options.domAPI(options);
  api.update(obj);
  var updater = function updater(newObj) {
    if (newObj) {
      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {
        return;
      }
      api.update(obj = newObj);
    } else {
      api.remove();
    }
  };
  return updater;
}
module.exports = function (list, options) {
  options = options || {};
  list = list || [];
  var lastIdentifiers = modulesToDom(list, options);
  return function update(newList) {
    newList = newList || [];
    for (var i = 0; i < lastIdentifiers.length; i++) {
      var identifier = lastIdentifiers[i];
      var index = getIndexByIdentifier(identifier);
      stylesInDOM[index].references--;
    }
    var newLastIdentifiers = modulesToDom(newList, options);
    for (var _i = 0; _i < lastIdentifiers.length; _i++) {
      var _identifier = lastIdentifiers[_i];
      var _index = getIndexByIdentifier(_identifier);
      if (stylesInDOM[_index].references === 0) {
        stylesInDOM[_index].updater();
        stylesInDOM.splice(_index, 1);
      }
    }
    lastIdentifiers = newLastIdentifiers;
  };
};

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {



var memo = {};

/* istanbul ignore next  */
function getTarget(target) {
  if (typeof memo[target] === "undefined") {
    var styleTarget = document.querySelector(target);

    // Special case to return head of iframe instead of iframe itself
    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
      try {
        // This will throw an exception if access to iframe is blocked
        // due to cross-origin restrictions
        styleTarget = styleTarget.contentDocument.head;
      } catch (e) {
        // istanbul ignore next
        styleTarget = null;
      }
    }
    memo[target] = styleTarget;
  }
  return memo[target];
}

/* istanbul ignore next  */
function insertBySelector(insert, style) {
  var target = getTarget(insert);
  if (!target) {
    throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
  }
  target.appendChild(style);
}
module.exports = insertBySelector;

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {



/* istanbul ignore next  */
function insertStyleElement(options) {
  var element = document.createElement("style");
  options.setAttributes(element, options.attributes);
  options.insert(element, options.options);
  return element;
}
module.exports = insertStyleElement;

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



/* istanbul ignore next  */
function setAttributesWithoutAttributes(styleElement) {
  var nonce =  true ? __webpack_require__.nc : 0;
  if (nonce) {
    styleElement.setAttribute("nonce", nonce);
  }
}
module.exports = setAttributesWithoutAttributes;

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {



/* istanbul ignore next  */
function apply(styleElement, options, obj) {
  var css = "";
  if (obj.supports) {
    css += "@supports (".concat(obj.supports, ") {");
  }
  if (obj.media) {
    css += "@media ".concat(obj.media, " {");
  }
  var needLayer = typeof obj.layer !== "undefined";
  if (needLayer) {
    css += "@layer".concat(obj.layer.length > 0 ? " ".concat(obj.layer) : "", " {");
  }
  css += obj.css;
  if (needLayer) {
    css += "}";
  }
  if (obj.media) {
    css += "}";
  }
  if (obj.supports) {
    css += "}";
  }
  var sourceMap = obj.sourceMap;
  if (sourceMap && typeof btoa !== "undefined") {
    css += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");
  }

  // For old IE
  /* istanbul ignore if  */
  options.styleTagTransform(css, styleElement, options.options);
}
function removeStyleElement(styleElement) {
  // istanbul ignore if
  if (styleElement.parentNode === null) {
    return false;
  }
  styleElement.parentNode.removeChild(styleElement);
}

/* istanbul ignore next  */
function domAPI(options) {
  if (typeof document === "undefined") {
    return {
      update: function update() {},
      remove: function remove() {}
    };
  }
  var styleElement = options.insertStyleElement(options);
  return {
    update: function update(obj) {
      apply(styleElement, options, obj);
    },
    remove: function remove() {
      removeStyleElement(styleElement);
    }
  };
}
module.exports = domAPI;

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {



/* istanbul ignore next  */
function styleTagTransform(css, styleElement) {
  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = css;
  } else {
    while (styleElement.firstChild) {
      styleElement.removeChild(styleElement.firstChild);
    }
    styleElement.appendChild(document.createTextNode(css));
  }
}
module.exports = styleTagTransform;

/***/ }),

/***/ "./stories/SearchProduct.js":
/*!**********************************!*\
  !*** ./stories/SearchProduct.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createSearchProduct: () => (/* binding */ createSearchProduct)
/* harmony export */ });
/* harmony import */ var _searchProduct_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./searchProduct.css */ "./stories/searchProduct.css");


const createSearchProduct = ({
  placeholder,
  fontSize,
  searchProductBackgroundColor,
} = {}) => {
  const products = [
    { name: "Tesla Model S", brand: "Tesla" },
    { name: "Tesla Model 3", brand: "Tesla" },
    { name: "Ford Mustang", brand: "Ford" },
    { name: "Ford F-150", brand: "Ford" },
    { name: "Chevrolet Camaro", brand: "Chevrolet" },
    { name: "Chevrolet Malibu", brand: "Chevrolet" },
    { name: "BMW 3 Series", brand: "BMW" },
    { name: "BMW X3", brand: "BMW" },
    { name: "Audi A3", brand: "Audi" },
    { name: "Audi Q5", brand: "Audi" },
    { name: "Chevrolet Silverado", brand: "Chevrolet" },
    { name: "BMW 5 Series", brand: "BMW" },
    { name: "Ford Escape", brand: "Ford" },
    { name: "Audi A4", brand: "Audi" },
    { name: "Tesla Model Y", brand: "Tesla" },
    { name: "Ford Focus", brand: "Ford" },
    { name: "Chevrolet Equinox", brand: "Chevrolet" },
    { name: "BMW Z4", brand: "BMW" },
    { name: "Audi A6", brand: "Audi" },
    { name: "Tesla Roadster", brand: "Tesla" },
  ];

  const brands = [...new Set(products.map((product) => product.brand))]; // Get unique brands

  const searchProduct = document.createElement("div");
  searchProduct.classList = "search-product";
  searchProduct.style.backgroundColor = searchProductBackgroundColor;

  const search = document.createElement("div");
  search.classList = "search";

  const searchInput = document.createElement("input");
  searchInput.type = "search";
  searchInput.placeholder = placeholder;
  searchInput.style.fontSize = fontSize;
  searchInput.style.outline = "none";
  searchInput.style.border = "none";

  const filterIcon = document.createElement("i");
  filterIcon.classList = "fa-solid fa-filter";

  const filterPopup = document.createElement("ul");
  filterPopup.classList = "filter-popup";
  filterPopup.style.display = "none"; // Initially hidden

  // Add Clear Filter option
  const clearFilterItem = document.createElement("li");
  clearFilterItem.textContent = "Clear Filter";
  clearFilterItem.style.fontWeight = "bold"; // Highlight Clear Filter
  clearFilterItem.style.cursor = "pointer"; // Indicate it's clickable
  filterPopup.appendChild(clearFilterItem);

  // Add brand filter options
  brands.forEach((brand) => {
    const filterPopupItem = document.createElement("li");
    const brandTitle = document.createElement("span");
    brandTitle.textContent = brand;
    filterPopupItem.append(brandTitle);
    filterPopup.appendChild(filterPopupItem);

    // Add click event to filter by brand
    filterPopupItem.addEventListener("click", () => {
      searchInput.value = ""; // Clear search input when filtering by brand
      filterProductsByBrand(brand);
      filterPopup.style.display = "none"; // Hide popup after selecting brand
    });
  });

  // Add click event to clear the filter
  clearFilterItem.addEventListener("click", () => {
    searchInput.value = ""; // Clear search input
    filterProducts(); // Show all products
    filterPopup.style.display = "none"; // Hide popup after clearing filter
  });

  const list = document.createElement("div");
  list.classList = "list";

  const listProduct = document.createElement("ul");
  listProduct.className = "product-list";

  // Function to filter and update the product list based on search input
  const filterProducts = () => {
    const query = searchInput.value.toLowerCase();
    listProduct.innerHTML = ""; // Clear the list before updating

    const filteredProducts = products.filter((product) =>
      product.name.toLowerCase().includes(query)
    );

    filteredProducts.forEach((product) => {
      const listItem = document.createElement("li");
      listItem.textContent = `${product.name}`;
      listProduct.appendChild(listItem);
    });
  };

  // Function to filter products by brand
  const filterProductsByBrand = (brand) => {
    listProduct.innerHTML = ""; // Clear the list before updating

    const filteredProducts = products.filter(
      (product) => product.brand.toLowerCase() === brand.toLowerCase()
    );

    filteredProducts.forEach((product) => {
      const listItem = document.createElement("li");
      listItem.textContent = `${product.name}`;
      listProduct.appendChild(listItem);
    });
  };

  // Initial population of the product list
  filterProducts();

  // Add event listener to search input for filtering products
  searchInput.addEventListener("input", filterProducts);

  // Toggle the popup when clicking the filter icon
  filterIcon.addEventListener("click", (e) => {
    e.stopPropagation(); // Prevent click from propagating to document
    filterPopup.style.display =
      filterPopup.style.display === "none" ? "block" : "none";
  });

  // Hide the popup when clicking outside
  document.addEventListener("click", () => {
    filterPopup.style.display = "none";
  });

  // Prevent closing the popup when clicking inside
  filterPopup.addEventListener("click", (e) => {
    e.stopPropagation();
  });

  searchProduct.append(search);
  search.appendChild(searchInput);
  search.appendChild(filterIcon);
  searchProduct.appendChild(list);

  // Append filterPopup to search after appending filterIcon
  search.appendChild(filterPopup);

  list.append(listProduct);

  return searchProduct;
};


/***/ })

});
//# sourceMappingURL=SearchProduct-stories.50d4a952963fdd785f63.hot-update.js.map