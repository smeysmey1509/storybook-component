"use strict";
self["webpackHotUpdatestorybook"]("SearchProduct-stories",{

/***/ "./stories/SearchProduct.js":
/*!**********************************!*\
  !*** ./stories/SearchProduct.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createSearchProduct: () => (/* binding */ createSearchProduct)
/* harmony export */ });
/* harmony import */ var _searchProduct_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./searchProduct.css */ "./stories/searchProduct.css");


const createSearchProduct = () => {
  const products = [
    { name: "Tesla Model S" },
    { name: "Ford Mustang" },
    { name: "Chevrolet Camaro" },
    { name: "BMW 3 Series" },
    { name: "Audi A4" },
    { name: "Mercedes-Benz C-Class" },
  ];
  const searchProduct = document.createElement("div");
  searchProduct.classList = "search-product";

  const search = document.createElement("div");
  search.classList = "search";

  const searchInput = document.createElement("input");
  searchInput.type = "search";
  searchInput.placeholder = "Search products...";
  searchInput.style.outline = "none";
  searchInput.style.border = "none";

  const filterIcon = document.createElement("i");
  filterIcon.classList = "fa-solid fa-filter";

  // Create the popup element
  const popup = document.createElement("div");
  popup.classList = "filter-popup";
  popup.textContent = "Filter options are currently unavailable."; // Example text
  popup.style.display = "none"; // Initially hidden

  const list = document.createElement("div");

  const listProduct = document.createElement("ul");
  listProduct.className = "product-list";

  // Function to filter and update the product list based on search input
  const filterProducts = () => {
    const query = searchInput.value.toLowerCase();
    listProduct.innerHTML = ""; // Clear the list before updating

    const filteredProducts = products.filter((product) =>
      product.name.toLowerCase().includes(query)
    );

    filteredProducts.forEach((product) => {
      const listItem = document.createElement("li");
      listItem.textContent = product.name;
      listProduct.appendChild(listItem);
    });
  };

  // Initial population of the product list
  filterProducts();

  // Add event listener to search input for filtering products
  searchInput.addEventListener("input", filterProducts);

  // Iterate over the products and create list items
  products.forEach((product) => {
    const listItem = document.createElement("li");
    listItem.textContent = product.name;
    listProduct.appendChild(listItem);
  });

  searchProduct.append(search);
  search.appendChild(searchInput);
  search.appendChild(filterIcon);
  searchProduct.appendChild(list).appendChild(listProduct);

  return searchProduct;
};


/***/ })

});
//# sourceMappingURL=SearchProduct-stories.bd52fd2d20643d981703.hot-update.js.map