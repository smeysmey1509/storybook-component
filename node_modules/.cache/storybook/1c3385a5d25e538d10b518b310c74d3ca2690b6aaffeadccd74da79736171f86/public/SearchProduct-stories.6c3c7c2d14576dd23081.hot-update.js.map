{"version":3,"file":"SearchProduct-stories.6c3c7c2d14576dd23081.hot-update.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;ACvDA","sources":["webpack://storybook/./stories/SearchProduct.stories.js","webpack://storybook/ignored|/home/admin/Smey/Raksmey/storybook/node_modules/object-inspect|./util.inspect"],"sourcesContent":["import { createSearchProduct } from \"./SearchProduct\";\nimport { within, userEvent } from \"@storybook/testing-library\";\n\nexport default {\n  title: \"Component/SearchProduct\",\n  tags: [\"autodocs\"],\n  parameters: {\n    layout: \"centered\",\n  },\n  argsTypes: {\n    placeholder: { control: \"text\" },\n    fontSize: { control: \"text\" },\n    searchProductBackgroundColor: { control: \"color\" },\n  },\n};\n\nexport const Default = {\n  args: {\n    placeholder: \"Search here ...\",\n    fontSize: \"12px\",\n    searchProductBackgroundColor: \"#ecc2c2\",\n  },\n  render: (args) => createSearchProduct(args),\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    // Test the search functionality\n    const searchInput = canvas.getByPlaceholderText(\"Search here ...\");\n    userEvent.type(searchInput, \"Tesla\");\n\n    // Check if filtered products are displayed\n    expect(canvas.getByText(\"Tesla Model S\")).toBeInTheDocument();\n    expect(canvas.queryByText(\"Ford Mustang\")).not.toBeInTheDocument();\n\n    // Test the filter popup\n    const filterIcon = canvas.getByRole(\"img\", { name: /filter/i });\n    userEvent.click(filterIcon);\n\n    // Check if filter popup contains brand options\n    expect(canvas.getByText(\"Tesla\")).toBeInTheDocument();\n\n    // Click on a brand to filter\n    userEvent.click(canvas.getByText(\"Tesla\"));\n\n    // Check if only Tesla products are displayed\n    expect(canvas.getByText(\"Tesla Model S\")).toBeInTheDocument();\n    expect(canvas.queryByText(\"Ford Mustang\")).not.toBeInTheDocument();\n\n    // Clear filter\n    userEvent.click(canvas.getByText(\"Clear Filter\"));\n\n    // Check if all products are displayed again\n    expect(canvas.getByText(\"Ford Mustang\")).toBeInTheDocument();\n  },\n};\n;export const __namedExportsOrder = [\"Default\"];","/* (ignored) */"],"names":[],"sourceRoot":""}