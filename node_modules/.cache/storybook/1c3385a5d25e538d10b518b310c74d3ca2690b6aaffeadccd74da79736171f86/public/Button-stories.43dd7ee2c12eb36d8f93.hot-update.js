"use strict";
self["webpackHotUpdatestorybook"]("Button-stories",{

/***/ "./stories/Button.stories.js":
/*!***********************************!*\
  !*** ./stories/Button.stories.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Delete: () => (/* binding */ Delete),
/* harmony export */   Large: () => (/* binding */ Large),
/* harmony export */   Primary: () => (/* binding */ Primary),
/* harmony export */   Secondary: () => (/* binding */ Secondary),
/* harmony export */   Small: () => (/* binding */ Small),
/* harmony export */   Update: () => (/* binding */ Update),
/* harmony export */   Xs: () => (/* binding */ Xs),
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _storybook_test__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @storybook/test */ "./node_modules/@storybook/test/dist/index.mjs");
/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Button */ "./stories/Button.js");




// More on how to set up stories at: https://storybook.js.org/docs/writing-stories
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  title: "Example/Button",
  tags: ["autodocs"],
  render: ({
    label,
    ...args
  }) => {
    // You can either use a function to create DOM elements or use a plain html string!
    // return `<div>${label}</div>`;
    return (0,_Button__WEBPACK_IMPORTED_MODULE_1__.createButton)({
      label,
      ...args
    });
  },
  argTypes: {
    color: {
      control: "color"
    },
    backgroundColor: {
      control: "color"
    },
    label: {
      control: "text"
    },
    onClick: {
      action: "onClick"
    },
    primary: {
      control: "boolean"
    },
    size: {
      control: {
        type: "select"
      },
      options: ["small", "medium", "large"]
    }
  },
  // Use `fn` to spy on the onClick arg, which will appear in the actions panel once invoked: https://storybook.js.org/docs/essentials/actions#action-args
  args: {
    onClick: (0,_storybook_test__WEBPACK_IMPORTED_MODULE_0__.fn)()
  }
});

// More on writing stories with args: https://storybook.js.org/docs/writing-stories/args
const Primary = {
  args: {
    primary: true,
    label: "Button"
  }
};
Primary.play = async ({}) => {
  let canvas = within(canvasElement);
  let primaryButton = await canvas.getByRole("button", {
    name: /Button/i
  });
};
const Secondary = {
  args: {
    label: "Button"
  }
};
const Large = {
  args: {
    size: "large",
    label: "Button"
  }
};
const Small = {
  args: {
    size: "small",
    label: "Button"
  }
};
const Xs = {
  args: {
    size: "large",
    label: "Button"
  }
};
const Delete = {
  args: {
    size: "small",
    label: "Delete",
    backgroundColor: "#f60000",
    color: "#ffffff"
  }
};
const Update = {
  args: {
    primary: true,
    label: "Update",
    color: "#ffffff"
  }
};
;
const __namedExportsOrder = ["Primary", "Secondary", "Large", "Small", "Xs", "Delete", "Update"];
Primary.parameters = {
  ...Primary.parameters,
  docs: {
    ...Primary.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    primary: true,\n    label: \"Button\"\n  }\n}",
      ...Primary.parameters?.docs?.source
    }
  }
};
Secondary.parameters = {
  ...Secondary.parameters,
  docs: {
    ...Secondary.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    label: \"Button\"\n  }\n}",
      ...Secondary.parameters?.docs?.source
    }
  }
};
Large.parameters = {
  ...Large.parameters,
  docs: {
    ...Large.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    size: \"large\",\n    label: \"Button\"\n  }\n}",
      ...Large.parameters?.docs?.source
    }
  }
};
Small.parameters = {
  ...Small.parameters,
  docs: {
    ...Small.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    size: \"small\",\n    label: \"Button\"\n  }\n}",
      ...Small.parameters?.docs?.source
    }
  }
};
Xs.parameters = {
  ...Xs.parameters,
  docs: {
    ...Xs.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    size: \"large\",\n    label: \"Button\"\n  }\n}",
      ...Xs.parameters?.docs?.source
    }
  }
};
Delete.parameters = {
  ...Delete.parameters,
  docs: {
    ...Delete.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    size: \"small\",\n    label: \"Delete\",\n    backgroundColor: \"#f60000\",\n    color: \"#ffffff\"\n  }\n}",
      ...Delete.parameters?.docs?.source
    }
  }
};
Update.parameters = {
  ...Update.parameters,
  docs: {
    ...Update.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    primary: true,\n    label: \"Update\",\n    color: \"#ffffff\"\n  }\n}",
      ...Update.parameters?.docs?.source
    }
  }
};

/***/ })

});
//# sourceMappingURL=Button-stories.43dd7ee2c12eb36d8f93.hot-update.js.map