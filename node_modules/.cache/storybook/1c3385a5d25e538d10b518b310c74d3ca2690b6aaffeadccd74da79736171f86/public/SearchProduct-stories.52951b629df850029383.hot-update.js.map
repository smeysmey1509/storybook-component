{"version":3,"file":"SearchProduct-stories.52951b629df850029383.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://storybook/./stories/SearchProduct.stories.js"],"sourcesContent":["import { createSearchProduct } from \"./SearchProduct\";\nimport { within, userEvent } from \"@storybook/testing-library\";\n\nexport default {\n  title: \"Component/SearchProduct\",\n  tags: [\"autodocs\"],\n  parameters: {\n    layout: \"centered\",\n  },\n  argTypes: {\n    placeholder: { control: \"text\" },\n    fontSize: { control: \"text\" },\n    searchProductBackgroundColor: { control: \"color\" },\n  },\n};\n\nexport const Default = {\n  args: {\n    placeholder: \"Search here ...\",\n    fontSize: \"12px\",\n    searchProductBackgroundColor: \"#e1c8c8\",\n  },\n  render: (args) => createSearchProduct(args),\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    // Test the search functionality\n    const searchInput = canvas.getByPlaceholderText(\"Search here ...\");\n    userEvent.type(searchInput, \"Tesla\");\n\n    // Check if filtered products are displayed\n    await new Promise((resolve) => setTimeout(resolve, 1000));\n\n    // Test the filter popup\n    // Use querySelector to find the Font Awesome icon\n    const filterIcon = canvasElement.querySelector(\".fa-filter\");\n\n    // Ensure the filter icon is visible\n    if (filterIcon) {\n      userEvent.click(filterIcon);\n\n      // Wait for the popup to be visible and contain brand options\n      const teslaBrand = await canvas.findByText(\"Tesla\");\n      if (teslaBrand) {\n        teslaBrand.click();\n\n        // Wait for the products list to update\n        const teslaModelS = await canvas.findByText(\"Tesla Model S\");\n        if (teslaModelS) {\n          // Check if the Tesla Model S is in the document\n          teslaModelS;\n        }\n        const fordMustang = canvas.queryByText(\"Ford Mustang\");\n        if (fordMustang) {\n          // Ensure Ford Mustang is not in the document\n          fordMustang;\n        }\n\n        // Clear filter\n        const clearFilter = await canvas.findByText(\"Clear Filter\");\n        userEvent.click(clearFilter);\n\n        // Wait for all products to be displayed again\n        await canvas.findByText(\"Ford Mustang\");\n      }\n    } else {\n      throw new Error(\"Filter icon not found\");\n    }\n  },\n};\n\nexport const New = {\n  args: {\n    placeholder: \"Search here ...\",\n    fontSize: \"17px\",\n    searchProductBackgroundColor: \"#c22828\"\n  },\n  render:args => createSearchProduct(args),\n  play:async (\n    {\n      canvasElement\n    }\n  ) => {\n    const canvas = within(canvasElement);\n\n    const searchInput = canvas.getByPlaceholderText(\"Search here ...\");\n    userEvent.type(searchInput, \"Tesla\");\n\n    await new Promise(resolve => setTimeout(resolve, 1000));\n\n    const filterIcon = canvasElement.querySelector(\".fa-filter\");\n\n    if (filterIcon) {\n      userEvent.click(filterIcon);\n\n      const teslaBrand = await canvas.findByText(\"Tesla\");\n      if (teslaBrand) {\n        teslaBrand.click();\n\n        const teslaModelS = await canvas.findByText(\"Tesla Model S\");\n        if (teslaModelS) {\n          teslaModelS;\n        }\n        const fordMustang = canvas.queryByText(\"Ford Mustang\");\n        if (fordMustang) {\n          fordMustang;\n        }\n\n        const clearFilter = await canvas.findByText(\"Clear Filter\");\n        userEvent.click(clearFilter);\n\n        await canvas.findByText(\"Ford Mustang\");\n      }\n    } else {\n      throw new Error(\"Filter icon not found\");\n    }\n  }\n};\n;export const __namedExportsOrder = [\"Default\",\"New\"];"],"names":[],"sourceRoot":""}