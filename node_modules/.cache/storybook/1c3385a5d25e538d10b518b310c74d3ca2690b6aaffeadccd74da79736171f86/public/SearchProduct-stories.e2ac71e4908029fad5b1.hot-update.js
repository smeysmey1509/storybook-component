"use strict";
self["webpackHotUpdatestorybook"]("SearchProduct-stories",{

/***/ "./stories/SearchProduct.js":
/*!**********************************!*\
  !*** ./stories/SearchProduct.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createSearchProduct: () => (/* binding */ createSearchProduct)
/* harmony export */ });
/* harmony import */ var _searchProduct_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./searchProduct.css */ "./stories/searchProduct.css");


const createSearchProduct = () => {
  const products = [
    { name: "Tesla Model S", brand: "Tesla" },
    { name: "Ford Mustang", brand: "Ford" },
    { name: "Chevrolet Camaro", brand: "Chevrolet" },
    { name: "BMW 3 Series", brand: "BMW" },
    { name: "Audi A4", brand: "Audi" },
    { name: "Mercedes-Benz C-Class", brand: "Mercedes-Benz" },
    { name: "Toyota Camry", brand: "Toyota" },
    { name: "Honda Accord", brand: "Honda" },
    { name: "Nissan Altima", brand: "Nissan" },
    { name: "Hyundai Sonata", brand: "Hyundai" },
    { name: "Kia Optima", brand: "Kia" },
    { name: "Volkswagen Passat", brand: "Volkswagen" },
    { name: "Subaru Impreza", brand: "Subaru" },
    { name: "Mazda 6", brand: "Mazda" },
    { name: "Jaguar XE", brand: "Jaguar" },
    { name: "Lexus IS", brand: "Lexus" },
    { name: "Volvo S60", brand: "Volvo" },
    { name: "Alfa Romeo Giulia", brand: "Alfa Romeo" },
    { name: "Cadillac ATS", brand: "Cadillac" },
    { name: "Infiniti Q50", brand: "Infiniti" },
  ];

  const brands = [...new Set(products.map((product) => product.brand))]; // Get unique brands

  const searchProduct = document.createElement("div");
  searchProduct.classList = "search-product";

  const search = document.createElement("div");
  search.classList = "search";

  const searchInput = document.createElement("input");
  searchInput.type = "search";
  searchInput.placeholder = "Search products...";
  searchInput.style.outline = "none";
  searchInput.style.border = "none";

  const filterIcon = document.createElement("i");
  filterIcon.classList = "fa-solid fa-filter";

  const filterPopup = document.createElement("ul");
  filterPopup.classList = "filter-popup";
  filterPopup.style.display = "none"; // Initially hidden

  brands.forEach((brand) => {
    const filterPopupItem = document.createElement("li");
    const brandTitle = document.createElement("span");
    brandTitle.textContent = brand;
    filterPopupItem.append(brandTitle);
    filterPopup.append(filterPopupItem);

    // Add click event to filter by brand
    filterPopupItem.addEventListener("click", () => {
      searchInput.value = ""; // Clear search input when filtering by brand
      filterProductsByBrand(brand);
      filterPopup.style.display = "none"; // Hide popup after selecting brand
    });
  });

  const list = document.createElement("div");
  list.classList = "list";

  const listProduct = document.createElement("ul");
  listProduct.className = "product-list";

  // Function to filter and update the product list based on search input
  const filterProducts = () => {
    const query = searchInput.value.toLowerCase();
    listProduct.innerHTML = ""; // Clear the list before updating

    const filteredProducts = products.filter((product) =>
      product.name.toLowerCase().includes(query)
    );

    filteredProducts.forEach((product) => {
      const listItem = document.createElement("li");
      listItem.textContent = `${product.name} (${product.brand})`;
      listProduct.appendChild(listItem);
    });
  };

  // Function to filter products by brand
  const filterProductsByBrand = (brand) => {
    listProduct.innerHTML = ""; // Clear the list before updating

    const filteredProducts = products.filter(
      (product) => product.brand.toLowerCase() === brand.toLowerCase()
    );

    filteredProducts.forEach((product) => {
      const listItem = document.createElement("li");
      listItem.textContent = `${product.name} (${product.brand})`;
      listProduct.appendChild(listItem);
    });
  };

  // Initial population of the product list
  filterProducts();

  // Add event listener to search input for filtering products
  searchInput.addEventListener("input", filterProducts);

  // Toggle the popup when clicking the filter icon
  filterIcon.addEventListener("click", (e) => {
    e.stopPropagation(); // Prevent click from propagating to document
    filterPopup.style.display =
      filterPopup.style.display === "none" ? "block" : "none";
  });

  // Hide the popup when clicking outside
  document.addEventListener("click", () => {
    filterPopup.style.display = "none";
  });

  // Prevent closing the popup when clicking inside
  filterPopup.addEventListener("click", (e) => {
    e.stopPropagation();
  });

  searchProduct.append(search);
  search.appendChild(searchInput);
  search.appendChild(filterIcon);
  searchProduct.appendChild(list);

  // Append filterPopup to search after appending filterIcon
  search.appendChild(filterPopup);

  list.append(listProduct);

  return searchProduct;
};


/***/ })

});
//# sourceMappingURL=SearchProduct-stories.e2ac71e4908029fad5b1.hot-update.js.map