"use strict";
self["webpackHotUpdatestorybook"]("ListdownMenu-stories",{

/***/ "./stories/ListdownMenu.js":
/*!*********************************!*\
  !*** ./stories/ListdownMenu.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createListdownMenu: () => (/* binding */ createListdownMenu)
/* harmony export */ });
/* harmony import */ var _listdownMenu_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./listdownMenu.css */ "./stories/listdownMenu.css");


const createListdownMenu = ({ title, items = [] } = {}) => {
  const listdownMenu = document.createElement("div");
  listdownMenu.classList = "listdown-menu";

  const listdownTitle = document.createElement("h2");
  listdownTitle.classList = "listdown-title";
  listdownTitle.textContent = title;

  const listdownUl = document.createElement("ul");

  items.forEach((item) => {
    const listItem = document.createElement("li");
    listItem.textContent = item.text; // Assuming item has a text property

    // Add click event listener (if needed)
    listItem.addEventListener("click", () => {
      console.log(`${item.text} clicked`);
    });

    // Check if the item has children
    if (item.children && item.children.length > 0) {
      const childUl = document.createElement("ul"); // Create a child <ul> for nested items

      item.children.forEach((child) => {
        const childLi = document.createElement("li");
        childLi.textContent = child;

        // Add click event listener for child items (if needed)
        childLi.addEventListener("click", (event) => {
          console.log(`${child} clicked`);
          event.stopPropagation(); // Prevent the parent item click event from firing
        });

        childUl.appendChild(childLi); // Append the child <li> to the child <ul>
      });

      listItem.appendChild(childUl); // Append the child <ul> to the parent <li>
    }

    // Append the parent list item to the <ul>
    listdownUl.appendChild(listItem);
  });

  listdownMenu.appendChild(listdownTitle);
  listdownMenu.appendChild(listdownUl);

  return listdownMenu;
};


/***/ })

});
//# sourceMappingURL=ListdownMenu-stories.5cf06f8aea2138d6dd09.hot-update.js.map